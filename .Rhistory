wilcox.test(billionaires.1996.inherited$wealth.worth.in.billions, billionaires.1996.not.inherited$wealth.worth.in.billions, alternative= "greater")
# p-value = 0.0203
wilcox.test(billionaires.2001.inherited$wealth.worth.in.billions, billionaires.2001.not.inherited$wealth.worth.in.billions, alternative= "greater")
# p-value = 0.001086
wilcox.test(billionaires.2014.inherited$wealth.worth.in.billions, billionaires.2014.not.inherited$wealth.worth.in.billions, alternative= "greater")
#p-value = 5.302e-08
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, outline=FALSE)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001, outline=FALSE)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014, outline=FALSE)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014)
cat("MWW test 1996\n")
wilcox.test(billionaires.1996.inherited$wealth.worth.in.billions, billionaires.1996.not.inherited$wealth.worth.in.billions, alternative= "greater")
# p-value = 0.0203
cat("MWW test 2001\n")
wilcox.test(billionaires.2001.inherited$wealth.worth.in.billions, billionaires.2001.not.inherited$wealth.worth.in.billions, alternative= "greater")
# p-value = 0.001086
cat("MWW test 2014\n")
wilcox.test(billionaires.2014.inherited$wealth.worth.in.billions, billionaires.2014.not.inherited$wealth.worth.in.billions, alternative= "greater")
#p-value = 5.302e-08
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, outline=FALSE)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001, outline=FALSE)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014, outline=FALSE)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014)
boxplot(wealth.worth.in.billions~location.region, billionaires.2014, las=2, xlab="", ylab="", main="Prikaz raspona bogatstva po kontinentima", outline=FALSE)
par(mar = c(10, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, las=2, xlab="", ylab="", main="Prikaz raspona bogatstva po kontinentima", outline=FALSE)
title(xlab="Nasljedstvo", line=6)
title(ylab = "Raspon bogatstva", line=3)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014)
par(mar = c(10, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, las=2, xlab="", ylab="", main="Prikaz raspona bogatstva po kontinentima", outline=FALSE)
title(xlab="Nasljedstvo", line=6)
title(ylab = "Raspon bogatstva", line=3)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014)
par(mar = c(10, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva", outline=FALSE)
title(xlab="Nasljedstvo", line=6)
title(ylab = "Raspon bogatstva", line=3)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014)
par(mar = c(10, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva", outline=FALSE)
title(xlab="Nasljedstvo", line=3)
title(ylab = "Raspon bogatstva", line=3)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014)
par(mar = c(10, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva", outline=FALSE)
title(xlab="Nasljedstvo", line=4)
title(ylab = "Raspon bogatstva", line=3)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014)
par(mar = c(10, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva", outline=FALSE)
title(xlab="Nasljedstvo", line=6)
title(ylab = "Raspon bogatstva", line=3)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014)
par(mar = c(10, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva", outline=FALSE)
title(xlab="Nasljedstvo", line=4)
title(ylab = "Raspon bogatstva", line=3)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014)
par(mar = c(6, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva", outline=FALSE)
title(xlab="Nasljedstvo", line=4)
title(ylab = "Raspon bogatstva", line=3)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014)
par(mar = c(5, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva", outline=FALSE)
title(xlab="Nasljedstvo", line=3)
title(ylab = "Raspon bogatstva", line=3)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014, outline=FALSE)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014)
par(mar = c(5, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva")
title(xlab="Nasljedstvo", line=3)
title(ylab = "Raspon bogatstva", line=3)
par(mar = c(5, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva", outline=FALSE)
title(xlab="Nasljedstvo", line=3)
title(ylab = "Raspon bogatstva", line=3)
# par(mar = c(5, 5, 3, 3), cex.axis=0.7)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva")
# title(xlab="Nasljedstvo", line=3)
# title(ylab = "Raspon bogatstva", line=3)
#
# par(mar = c(5, 5, 3, 3), cex.axis=0.7)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva", outline=FALSE)
# title(xlab="Nasljedstvo", line=3)
# title(ylab = "Raspon bogatstva", line=3)
# par(mar = c(5, 5, 3, 3), cex.axis=0.7)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva")
# title(xlab="Nasljedstvo", line=3)
# title(ylab = "Raspon bogatstva", line=3)
#
# par(mar = c(5, 5, 3, 3), cex.axis=0.7)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva", outline=FALSE)
# title(xlab="Nasljedstvo", line=3)
# title(ylab = "Raspon bogatstva", line=3)
par(mar = c(5, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva za godinu 1996")
title(xlab="Nasljedstvo", line=3)
title(ylab = "Raspon bogatstva", line=3)
par(mar = c(5, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva za godinu 1996", outline=FALSE)
title(xlab="Nasljedstvo", line=3)
title(ylab = "Raspon bogatstva", line=3)
# par(mar = c(5, 5, 3, 3), cex.axis=0.7)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva")
# title(xlab="Nasljedstvo", line=3)
# title(ylab = "Raspon bogatstva", line=3)
#
# par(mar = c(5, 5, 3, 3), cex.axis=0.7)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2001, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva", outline=FALSE)
# title(xlab="Nasljedstvo", line=3)
# title(ylab = "Raspon bogatstva", line=3)
# par(mar = c(5, 5, 3, 3), cex.axis=0.7)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva")
# title(xlab="Nasljedstvo", line=3)
# title(ylab = "Raspon bogatstva", line=3)
#
# par(mar = c(5, 5, 3, 3), cex.axis=0.7)
# boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.2014, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva", outline=FALSE)
# title(xlab="Nasljedstvo", line=3)
# title(ylab = "Raspon bogatstva", line=3)
par(mar = c(5, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva za godinu 1996")
title(xlab="Nasljedstvo", line=3)
title(ylab = "Raspon bogatstva", line=3)
par(mar = c(5, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions ~ wealth.how.inherited, data=billionaires.1996, xlab="", ylab="", main="Prikaz raspona bogatstva po faktoru nasljedstva za godinu 1996", outline=FALSE)
title(xlab="Nasljedstvo", line=3)
title(ylab = "Raspon bogatstva", line=3)
len <- length(v1)
probs <- rep(1/len, len)
cat('Broj milijardera po kontinentu 1996. godine: ', v1)
chisq.test(v1, p=probs)
cat('Broj milijardera po kontinentu 2001. godine: ', v2)
chisq.test(v2, p=probs)
cat('Broj milijardera po kontinentu 2014. godine: ', v3)
chisq.test(v3, p=probs)
require(tidyverse)
clean_string <- function(x) {
if (x == '' | (is.numeric(x) & x <= 0)) {
return (NA)
} else if (!is.numeric(x)) {
return (str_squish(tolower(x)))
} else {
return (x)
}
}
billionaires.unique <- billionaires
for (i in 1:nrow(billionaires)) {
for (j in 1:length(billionaires)) {
billionaires.unique[i, j] <- clean_string(billionaires.unique[i, j])
}
}
require(tidyverse)
clean_string <- function(x) {
if (x == '' | (is.numeric(x) & x <= 0)) {
return (NA)
} else if (!is.numeric(x)) {
return (str_squish(tolower(x)))
} else {
return (x)
}
}
billionaires.unique <- billionaires
for (i in 1:nrow(billionaires)) {
for (j in 1:length(billionaires)) {
billionaires.unique[i, j] <- clean_string(billionaires.unique[i, j])
}
}
fit.year = lm(wealth.worth.in.billions~year, data=billionaires.unique)
summary(fit.year)
fit.company.founded = lm(wealth.worth.in.billions~company.founded, data=billionaires.unique)
summary(fit.company.founded)
fit.company.relationship = lm(wealth.worth.in.billions~company.relationship, data=billionaires.unique)
summary(fit.company.relationship)
fit.company.sector = lm(wealth.worth.in.billions~company.sector, data=billionaires.unique)
summary(fit.company.sector)
fit.company.type = lm(wealth.worth.in.billions~company.type, data=billionaires.unique)
summary(fit.company.type)
fit.demographics.age = lm(wealth.worth.in.billions~demographics.age, data=billionaires.unique)
summary(fit.demographics.age)
fit.demographics.gender = lm(wealth.worth.in.billions~demographics.gender, data=billionaires.unique)
summary(fit.demographics.gender)
fit.location.citizenship = lm(wealth.worth.in.billions~location.citizenship, data=billionaires.unique)
summary(fit.location.citizenship)
fit.location.region = lm(wealth.worth.in.billions~location.region, data=billionaires.unique)
summary(fit.location.region)
fit.location.gdp = lm(wealth.worth.in.billions~location.gdp, data=billionaires.unique)
summary(fit.location.gdp)
fit.wealth.type = lm(wealth.worth.in.billions~wealth.type, data=billionaires.unique)
summary(fit.wealth.type)
fit.wealth.how.category = lm(wealth.worth.in.billions~wealth.how.category, data=billionaires.unique)
summary(fit.wealth.how.category)
fit.wealth.how.category = lm(wealth.worth.in.billions~wealth.how.category, data=billionaires.unique)
summary(fit.wealth.how.category)
fit.wealth.how.industry = lm(wealth.worth.in.billions~wealth.how.industry, data=billionaires.unique)
summary(fit.wealth.how.industry)
fit.wealth.how.inherited = lm(wealth.worth.in.billions~wealth.how.inherited, data=billionaires.unique)
summary(fit.wealth.how.inherited)
View(billionaires.unique)
fit.year = lm(wealth.worth.in.billions~year, data=billionaires.unique)
summary(fit.year)
fit.company.founded = lm(wealth.worth.in.billions~company.founded, data=billionaires.unique)
summary(fit.company.founded)
fit.company.relationship = lm(wealth.worth.in.billions~company.relationship, data=billionaires.unique)
summary(fit.company.relationship)
fit.company.sector = lm(wealth.worth.in.billions~company.sector, data=billionaires.unique)
summary(fit.company.sector)
fit.company.type = lm(wealth.worth.in.billions~company.type, data=billionaires.unique)
summary(fit.company.type)
fit.demographics.age = lm(wealth.worth.in.billions~demographics.age, data=billionaires.unique)
summary(fit.demographics.age)
fit.demographics.gender = lm(wealth.worth.in.billions~demographics.gender, data=billionaires.unique)
summary(fit.demographics.gender)
fit.location.citizenship = lm(wealth.worth.in.billions~location.citizenship, data=billionaires.unique)
summary(fit.location.citizenship)
fit.location.region = lm(wealth.worth.in.billions~location.region, data=billionaires.unique)
summary(fit.location.region)
fit.location.gdp = lm(wealth.worth.in.billions~location.gdp, data=billionaires.unique)
summary(fit.location.gdp)
fit.wealth.type = lm(wealth.worth.in.billions~wealth.type, data=billionaires.unique)
summary(fit.wealth.type)
fit.wealth.how.category = lm(wealth.worth.in.billions~wealth.how.category, data=billionaires.unique)
summary(fit.wealth.how.category)
fit.wealth.how.industry = lm(wealth.worth.in.billions~wealth.how.industry, data=billionaires.unique)
summary(fit.wealth.how.industry)
fit.wealth.how.inherited = lm(wealth.worth.in.billions~wealth.how.inherited, data=billionaires.unique)
summary(fit.wealth.how.inherited)
# fit.year = lm(wealth.worth.in.billions~year, data=billionaires.unique)
# summary(fit.year)
# Multiple R-squared:  0.01057,	Adjusted R-squared:  0.01019
# F-statistic: 27.91 on 1 and 2612 DF,  p-value: 1.376e-07
# znacajno
# fit.company.founded = lm(wealth.worth.in.billions~company.founded, data=billionaires.unique)
# summary(fit.company.founded)
# Multiple R-squared:  7.369e-05,	Adjusted R-squared:  -0.0003151
# F-statistic: 0.1895 on 1 and 2572 DF,  p-value: 0.6633
# nije znacajno
# fit.company.relationship = lm(wealth.worth.in.billions~company.relationship, data=billionaires.unique)
# summary(fit.company.relationship)
# Multiple R-squared:  0.02619,	Adjusted R-squared:  9.29e-05
# F-statistic: 1.004 on 67 and 2500 DF,  p-value: 0.4699
# nije znacajno
# fit.company.sector = lm(wealth.worth.in.billions~company.sector, data=billionaires.unique)
# summary(fit.company.sector)
# Multiple R-squared:  0.1901,	Adjusted R-squared:  -0.003127
# F-statistic: 0.9838 on 499 and 2091 DF,  p-value: 0.5857
# nije znacajno
# fit.company.type = lm(wealth.worth.in.billions~company.type, data=billionaires.unique)
# summary(fit.company.type)
# Multiple R-squared:  0.02624,	Adjusted R-squared:  0.02093
# F-statistic: 4.934 on 14 and 2563 DF,  p-value: 3.878e-09
# znacajno
# fit.demographics.age = lm(wealth.worth.in.billions~demographics.age, data=billionaires.unique)
# summary(fit.demographics.age)
# Multiple R-squared:  0.007372,	Adjusted R-squared:  0.006926
# F-statistic: 16.54 on 1 and 2227 DF,  p-value: 4.933e-05
# znacajno
# fit.demographics.gender = lm(wealth.worth.in.billions~demographics.gender, data=billionaires.unique)
# summary(fit.demographics.gender)
# Multiple R-squared:  0.0005293,	Adjusted R-squared:  -0.0002464
# F-statistic: 0.6823 on 2 and 2577 DF,  p-value: 0.5055
# nije znacajno
# fit.location.citizenship = lm(wealth.worth.in.billions~location.citizenship, data=billionaires.unique)
# summary(fit.location.citizenship)
# Multiple R-squared:  0.02364,	Adjusted R-squared:  -0.004026
# F-statistic: 0.8545 on 72 and 2541 DF,  p-value: 0.8034
# nije znacajno
# skip code -> isto kao country
# fit.location.region = lm(wealth.worth.in.billions~location.region, data=billionaires.unique)
# summary(fit.location.region)
# Residual standard error: 5.078 on 2606 degrees of freedom
# Multiple R-squared:  0.006854,	Adjusted R-squared:  0.004186
# F-statistic: 2.569 on 7 and 2606 DF,  p-value: 0.01224
# znacajno
# fit.location.gdp = lm(wealth.worth.in.billions~location.gdp, data=billionaires.unique)
# summary(fit.location.gdp)
# Multiple R-squared:  0.002278,	Adjusted R-squared:  0.001224
# F-statistic: 2.162 on 1 and 947 DF,  p-value: 0.1418
# nije znacajno
# fit.wealth.type = lm(wealth.worth.in.billions~wealth.type, data=billionaires.unique)
# summary(fit.wealth.type)
# Multiple R-squared:  0.005098,	Adjusted R-squared:  0.00356
# F-statistic: 3.314 on 4 and 2587 DF,  p-value: 0.01021
# znacajno
# fit.wealth.how.category = lm(wealth.worth.in.billions~wealth.how.category, data=billionaires.unique)
# summary(fit.wealth.how.category)
# Multiple R-squared:  0.005287,	Adjusted R-squared:  0.002231
# F-statistic:  1.73 on 8 and 2604 DF,  p-value: 0.08659
# nije znacajno
# fit.wealth.how.industry = lm(wealth.worth.in.billions~wealth.how.industry, data=billionaires.unique)
# summary(fit.wealth.how.industry)
# Multiple R-squared:  0.01712,	Adjusted R-squared:  0.01029
# F-statistic: 2.509 on 18 and 2594 DF,  p-value: 0.0004258
# znacajno
# fit.wealth.how.inherited = lm(wealth.worth.in.billions~wealth.how.inherited, data=billionaires.unique)
# summary(fit.wealth.how.inherited)
# Multiple R-squared:  0.004474,	Adjusted R-squared:  0.002565
# F-statistic: 2.344 on 5 and 2608 DF,  p-value: 0.03913
# znacajno
fit.combined = lm(log(wealth.worth.in.billions)~year + company.founded + company.relationship + company.sector + company.type + demographics.age + demographics.gender + location.gdp + location.region + wealth.type + wealth.how.category + wealth.how.industry + wealth.how.inherited, data=billionaires.unique)
summary(fit.combined)
fit.combined = lm((wealth.worth.in.billions)~year + company.founded + company.relationship + company.sector + company.type + demographics.age + demographics.gender + location.gdp + location.region + wealth.type + wealth.how.category + wealth.how.industry + wealth.how.inherited, data=billionaires.unique)
summary(fit.combined)
fit.combined = lm((wealth.worth.in.billions)~year + company.founded + company.relationship + company.sector + company.type + demographics.age + demographics.gender + location.region + wealth.type + wealth.how.category + wealth.how.industry + wealth.how.inherited, data=billionaires.unique)
summary(fit.combined)
fit.combined = lm(log(wealth.worth.in.billions)~year + company.founded + company.relationship + company.sector + company.type + demographics.age + demographics.gender + location.region + wealth.type + wealth.how.category + wealth.how.industry + wealth.how.inherited, data=billionaires.unique)
summary(fit.combined)
fit.combined = lm(log(wealth.worth.in.billions)~year + company.founded + company.relationship + company.sector + company.type + demographics.age + location.region + wealth.how.industry, data=billionaires.unique)
summary(fit.combined)
#### Kombinirano
# svi parametri
# fit.combined = lm(log(wealth.worth.in.billions)~year + company.founded + company.relationship + company.sector + company.type + demographics.age + demographics.gender + location.gdp + location.region + wealth.type + wealth.how.category + wealth.how.industry + wealth.how.inherited, data=billionaires.unique)
# summary(fit.combined)
# Multiple R-squared:  0.4655,	Adjusted R-squared:  0.1586
# F-statistic: 1.517 on 228 and 397 DF,  p-value: 0.000155
# vecina unosa deleted zbog NA kod location.gdp
# eliminacija
fit.combined = lm(log(wealth.worth.in.billions)~year + company.relationship + company.sector + demographics.age + wealth.how.industry, data=billionaires.unique)
summary(fit.combined)
Multiple R-squared:  0.3617,	Adjusted R-squared:  0.1614
#### Kombinirano
# svi parametri
# fit.combined = lm(log(wealth.worth.in.billions)~year + company.founded + company.relationship + company.sector + company.type + demographics.age + demographics.gender + location.gdp + location.region + wealth.type + wealth.how.category + wealth.how.industry + wealth.how.inherited, data=billionaires.unique)
# summary(fit.combined)
# Multiple R-squared:  0.4655,	Adjusted R-squared:  0.1586
# F-statistic: 1.517 on 228 and 397 DF,  p-value: 0.000155
# vecina unosa deleted zbog NA kod location.gdp
# eliminacija
fit.combined = lm(log(wealth.worth.in.billions)~year + company.relationship + company.sector + demographics.age + wealth.how.industry, data=billionaires.unique)
summary(fit.combined)
# Multiple R-squared:  0.3617,	Adjusted R-squared:  0.1614
# F-statistic: 1.806 on 531 and 1692 DF,  p-value: < 2.2e-16
fit.combined = lm(log(wealth.worth.in.billions)~year + company.relationship + company.sector + demographics.age + wealth.how.industry, data=billionaires.unique)
summary(fit.combined)
fit.combined = lm(log(wealth.worth.in.billions)~ company.relationship + company.sector + demographics.age + wealth.how.industry, data=billionaires.unique)
summary(fit.combined)
fit.combined = lm(log(wealth.worth.in.billions)~year  + company.sector + demographics.age + wealth.how.industry, data=billionaires.unique)
summary(fit.combined)
fit.combined = lm(log(wealth.worth.in.billions)~year + company.relationship  + demographics.age + wealth.how.industry, data=billionaires.unique)
summary(fit.combined)
fit.combined = lm(log(wealth.worth.in.billions)~year + company.relationship + company.sector + wealth.how.industry, data=billionaires.unique)
summary(fit.combined)
fit.combined = lm(log(wealth.worth.in.billions)~year + company.relationship + company.sector + demographics.age + , data=billionaires.unique)
fit.combined = lm(log(wealth.worth.in.billions)~year + company.relationship + company.sector + demographics.age, data=billionaires.unique)
fit.combined = lm(log(wealth.worth.in.billions)~year + company.relationship + company.sector + demographics.age, data=billionaires.unique)
summary(fit.combined)
fit.combined = lm(log(wealth.worth.in.billions)~year + company.relationship + company.sector + demographics.age, data=billionaires.unique)
summary(fit.combined)
fit.combined = lm(log(wealth.worth.in.billions)~year + company.relationship + company.sector + demographics.age + wealth.how.industry, data=billionaires.unique)
summary(fit.combined)
anova(fit.combined)
fit.combined = lm(log(wealth.worth.in.billions)~year + company.relationship + company.sector + demographics.age, data=billionaires.unique)
fit.combined = lm(log(wealth.worth.in.billions)~year + company.relationship + company.sector + demographics.age, data=billionaires.unique)
summary(fit.combined)
anova(fit.combined)
model = lm(log(wealth.worth.in.billions)~year + company.relationship + company.sector + demographics.age + wealth.how.industry, data=billionaires.unique)
hist(rstandard(model))
qqnorm(rstandard(model))
qqline(rstandard(model))
plot(model$fitted.values,model$residuals)
lillie.test(rstandard(model))
model = lm(log(wealth.worth.in.billions)~year + company.relationship + company.sector + demographics.age + wealth.how.industry, data=billionaires.unique)
hist(rstandard(model))
qqnorm(rstandard(model), pch = 1, main="Q-Q plot za reziduale modela", xlab="Kvantili normalne distribucije", ylab="Kvantili reziduala modela")
qqline(rstandard(model), col = "steelblue", lwd = 2)
plot(model$fitted.values,model$residuals)
lillie.test(rstandard(model))
plot(model$fitted.values,model$residuals, xlab="Fitted vrijednosti modela", ylab="Reziduali modela")
plot(model$fitted.values,model$residuals, main="Prikaz iznosa reziduala za pojedine vrijednosti modela", xlab="Fitted vrijednosti modela", ylab="Reziduali modela")
hist(rstandard(model))
model = lm(log(wealth.worth.in.billions)~year + company.relationship + company.sector + demographics.age + wealth.how.industry, data=billionaires.unique)
hist(rstandard(model), main="Prikaz distribucije standardiziranih reziduala", xlab="Iznos reziduala", ylab="Frekvencija")
qqnorm(rstandard(model), pch = 1, main="Q-Q plot za standardizirane reziduale modela", xlab="Kvantili normalne distribucije", ylab="Kvantili reziduala modela")
qqline(rstandard(model), col = "steelblue", lwd = 2)
plot(model$fitted.values,model$residuals, main="Prikaz iznosa reziduala za pojedine vrijednosti modela", xlab="Fitted vrijednosti modela", ylab="Reziduali modela")
lillie.test(rstandard(model))
model = lm(log(wealth.worth.in.billions)~year + company.relationship + company.sector + demographics.age, data=billionaires.unique)
hist(rstandard(model), main="Prikaz distribucije standardiziranih reziduala", xlab="Iznos reziduala", ylab="Frekvencija")
qqnorm(rstandard(model), pch = 1, main="Q-Q plot za standardizirane reziduale modela", xlab="Kvantili normalne distribucije", ylab="Kvantili reziduala modela")
qqline(rstandard(model), col = "steelblue", lwd = 2)
plot(model$fitted.values,model$residuals, main="Prikaz iznosa reziduala za pojedine vrijednosti modela", xlab="Fitted vrijednosti modela", ylab="Reziduali modela")
lillie.test(rstandard(model))
model = lm(log(wealth.worth.in.billions)~year + company.relationship + company.sector + demographics.age, data=billionaires.unique)
hist(rstandard(model), main="Prikaz distribucije standardiziranih reziduala", xlab="Iznos reziduala", ylab="Frekvencija")
qqnorm(rstandard(model), pch = 1, main="Q-Q plot za standardizirane reziduale modela", xlab="Kvantili normalne distribucije", ylab="Kvantili reziduala modela")
qqline(rstandard(model), col = "steelblue", lwd = 2)
plot(model$fitted.values,model$residuals, main="Prikaz iznosa reziduala za pojedine vrijednosti modela", xlab="Predviđene vrijednosti modela", ylab="Reziduali modela")
lillie.test(rstandard(model))
model = lm(log(wealth.worth.in.billions)~year + company.relationship + company.sector + demographics.age, data=billionaires.unique)
hist(rstandard(model), main="Prikaz distribucije standardiziranih reziduala", xlab="Iznos reziduala", ylab="Frekvencija")
qqnorm(rstandard(model), pch = 1, main="Q-Q plot za standardizirane reziduale modela", xlab="Kvantili normalne distribucije", ylab="Kvantili reziduala modela")
qqline(rstandard(model), col = "steelblue", lwd = 2)
plot(model$fitted.values,model$residuals, main="Prikaz iznosa reziduala za predviđene vrijednosti modela", xlab="Predviđene vrijednosti modela", ylab="Reziduali modela")
lillie.test(rstandard(model))
fit.industry = lm(wealth.worth.in.billions~wealth.how.industry, data=billionaires.unique)
summary(fit.industry)
hist(rstandard(fit.industry), main="Prikaz distribucije standardiziranih reziduala", xlab="Iznos reziduala", ylab="Frekvencija")
qqnorm(rstandard(fit.industry), pch = 1, main="Q-Q plot za standardizirane reziduale modela", xlab="Kvantili normalne distribucije", ylab="Kvantili reziduala modela")
qqline(rstandard(fit.industry), col = "steelblue", lwd = 2)
plot(fit.industry$fitted.values,fit.industry$residuals, main="Prikaz iznosa reziduala za predviđene vrijednosti modela", xlab="Predviđene vrijednosti modela", ylab="Reziduali modela")
lillie.test(rstandard(fit.industry))
fit.industry = lm(log(wealth.worth.in.billions)~wealth.how.industry, data=billionaires.unique)
hist(rstandard(fit.industry), main="Prikaz distribucije standardiziranih reziduala", xlab="Iznos reziduala", ylab="Frekvencija")
qqnorm(rstandard(fit.industry), pch = 1, main="Q-Q plot za standardizirane reziduale modela", xlab="Kvantili normalne distribucije", ylab="Kvantili reziduala modela")
qqline(rstandard(fit.industry), col = "steelblue", lwd = 2)
plot(fit.industry$fitted.values,fit.industry$residuals, main="Prikaz iznosa reziduala za predviđene vrijednosti modela", xlab="Predviđene vrijednosti modela", ylab="Reziduali modela")
lillie.test(rstandard(fit.industry))
hist(rstandard(fit.industry), main="Prikaz distribucije standardiziranih reziduala", xlab="Iznos reziduala", ylab="Frekvencija")
qqnorm(rstandard(fit.industry), pch = 1, main="Q-Q plot za standardizirane reziduale modela", xlab="Kvantili normalne distribucije", ylab="Kvantili reziduala modela")
qqline(rstandard(fit.industry), col = "steelblue", lwd = 2)
plot(fit.industry$fitted.values,fit.industry$residuals, main="Prikaz iznosa reziduala za predviđene vrijednosti modela", xlab="Predviđene vrijednosti modela", ylab="Reziduali modela")
lillie.test(rstandard(fit.industry))
fit.industry = lm(wealth.worth.in.billions~wealth.how.industry, data=billionaires.unique)
summary(fit.industry)
# Multiple R-squared:  0.01712,	Adjusted R-squared:  0.01029
# F-statistic: 2.509 on 18 and 2594 DF,  p-value: 0.0004258
billionaires.best.industry <- filter(billionaires.unique, wealth.how.industry %in% c("technology-computer", "retail, restaurant", "diversified financial", "media", "consumer"))
par(mar = c(8, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions~wealth.how.industry, data=billionaires.best.industry, las=2, xlab="", ylab="", outline=TRUE)
title(xlab="Različite industrije", line=6)
title(ylab = "Raspon bogatstva", line=3)
par(mar = c(8, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions~wealth.how.industry, data=billionaires.best.industry, las=2, xlab="", ylab="", outline=FALSE)
title(xlab="Različite industrije", line=6)
title(ylab = "Raspon bogatstva", line=3)
billionaires.best.industry <- filter(billionaires.unique, wealth.how.industry %in% c("technology-computer", "retail, restaurant", "diversified financial", "media", "consumer"))
par(mar = c(8, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions~wealth.how.industry, data=billionaires.best.industry, main="Prikaz raspona bogatstva za različite industrije", las=2, xlab="", ylab="", outline=TRUE)
title(xlab="Različite industrije", line=6)
title(ylab = "Raspon bogatstva", line=3)
par(mar = c(8, 5, 3, 3), cex.axis=0.7)
boxplot(wealth.worth.in.billions~wealth.how.industry, data=billionaires.best.industry, main="Prikaz raspona bogatstva za različite industrije", las=2, xlab="", ylab="", outline=FALSE)
title(xlab="Različite industrije", line=6)
title(ylab = "Raspon bogatstva", line=3)
lillie.test(billionaires.best.industry$wealth.worth.in.billions[billionaires.best.industry$wealth.how.industry == "technology-computer"])
qqnorm(billionaires.best.industry$wealth.worth.in.billions[billionaires.best.industry$wealth.how.industry == "technology-computer"])
qqline(billionaires.best.industry$wealth.worth.in.billions[billionaires.best.industry$wealth.how.industry == "technology-computer"])
lillie.test(billionaires.best.industry$wealth.worth.in.billions[billionaires.best.industry$wealth.how.industry == "retail, restaurant"])
lillie.test(billionaires.best.industry$wealth.worth.in.billions[billionaires.best.industry$wealth.how.industry == "diversified financial"])
lillie.test(billionaires.best.industry$wealth.worth.in.billions[billionaires.best.industry$wealth.how.industry == "media"])
lillie.test(billionaires.best.industry$wealth.worth.in.billions[billionaires.best.industry$wealth.how.industry == "consumer"])
bartlett.test(billionaires.best.industry$wealth.worth.in.billions ~ billionaires.best.industry$wealth.how.industry)
lillie.test(billionaires.best.industry$wealth.worth.in.billions[billionaires.best.industry$wealth.how.industry == "technology-computer"])
lillie.test(billionaires.best.industry$wealth.worth.in.billions[billionaires.best.industry$wealth.how.industry == "retail, restaurant"])
lillie.test(billionaires.best.industry$wealth.worth.in.billions[billionaires.best.industry$wealth.how.industry == "diversified financial"])
lillie.test(billionaires.best.industry$wealth.worth.in.billions[billionaires.best.industry$wealth.how.industry == "media"])
lillie.test(billionaires.best.industry$wealth.worth.in.billions[billionaires.best.industry$wealth.how.industry == "consumer"])
bartlett.test(billionaires.best.industry$wealth.worth.in.billions ~ billionaires.best.industry$wealth.how.industry)
lillie.test(billionaires.best.industry$wealth.worth.in.billions[billionaires.best.industry$wealth.how.industry == "technology-computer"])
# lillie.test(billionaires.best.industry$wealth.worth.in.billions[billionaires.best.industry$wealth.how.industry == "retail, restaurant"])
#
# lillie.test(billionaires.best.industry$wealth.worth.in.billions[billionaires.best.industry$wealth.how.industry == "diversified financial"])
#
# lillie.test(billionaires.best.industry$wealth.worth.in.billions[billionaires.best.industry$wealth.how.industry == "media"])
#
# lillie.test(billionaires.best.industry$wealth.worth.in.billions[billionaires.best.industry$wealth.how.industry == "consumer"])
bartlett.test(billionaires.best.industry$wealth.worth.in.billions ~ billionaires.best.industry$wealth.how.industry)
kruskal.test(wealth.worth.in.billions~wealth.how.industry, data=billionaires.best.industry)
a = aov(wealth.worth.in.billions~wealth.how.industry, data=billionaires.best.industry)
summary(a)
#kruskal.test(wealth.worth.in.billions~wealth.how.industry, data=billionaires.unique)
kruskal.test(wealth.worth.in.billions~wealth.how.industry, data=billionaires.best.industry)
a = aov(wealth.worth.in.billions~wealth.how.industry, data=billionaires.best.industry)
summary(a)
kruskal.test(wealth.worth.in.billions~wealth.how.industry, data=billionaires.unique)
